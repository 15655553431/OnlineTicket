<#@ template language="C#" debug="false" hostspecific="true"#>
<#@ include file="EF.Utility.CS.ttinclude"#><#@ 
 output extension=".cs"#>

 <#
 CodeGenerationTools code = new CodeGenerationTools(this);
 MetadataLoader loader = new MetadataLoader(this);
 CodeRegion region = new CodeRegion(this,1);
 MetadataTools ef = new MetadataTools(this);

const string inputFile = @"..\\Model\\DataModel.edmx";

EdmItemCollection ItemCollection = loader.CreateEdmItemCollection(inputFile);
string namespaceName = code.VsNamespaceSuggestion();

EntityFrameworkTemplateFileManager fileManager = EntityFrameworkTemplateFileManager.Create(this);

#>
using EFDal;
using IDal;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace DalFactory
{
    public class DbSession:IDbSession
    {

<#
foreach(EntityType entity in ItemCollection.GetItems<EntityType>().OrderBy(e=>e.Name))
{
	fileManager.StartNewFile(entity.Name + ".cs");
   
#>

		public I<#=entity.Name#>Dal <#=entity.Name#>Dal
        {
            get { return StaticDalFactory.Get<#=entity.Name#>Dal(); }
        }

<#}#>
		/// <summary>
        /// 拿到当前的EF的上下文，然后进行 把修改的实体进行一个整体提交
        /// </summary>
        /// <returns></returns>
        public int SaveChanges()
        {
            return DbContextFactory.GetCurrentDbContext().SaveChanges();
        }
	}
}